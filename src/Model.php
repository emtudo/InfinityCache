<?php
namespace Morilog\InfinityCache;

use Illuminate\Database\Eloquent\Model as EloquentModel;

abstract class Model extends EloquentModel
{
    /**
     * @var Repository
     */
    private $cache;

    /**
     * Create a new Eloquent model instance.
     *
     * @param  array $attributes
     */
    public function __construct(array $attributes = [])
    {
        $this->cache = app('cache.store');
        parent::__construct($attributes); // TODO: Change the autogenerated stub
    }

    /**
     * @{@inheritdoc}
     */
    public function newBaseQueryBuilder()
    {
        $conn = $this->getConnection();
        $grammar = $conn->getQueryGrammar();

        return new Builder($this->cache, $conn, $grammar, $conn->getPostProcessor(), $this->getCacheTag());
    }

    public static function boot()
    {
        parent::boot();

        self::saved(function ($model) {
            $model->clearCache();
        });

        self::deleted(function ($model) {
            $model->clearCache();
        });

    }

    /**
     * Clear cached queries
     * @return void
     */
    protected function clearCache()
    {
        $this->cache->tags($this->getCacheTag())->flush();
    }

    /**
     * Get hashed class name
     * @return string
     */
    public function getCacheTag()
    {
        return md5(get_called_class());
    }

}